---
# ROLE: ruby
# roles/ruby/tasks/main.yml
#
# removes package ruby, installs ruby from source
#
#- name: check ruby {{ ruby_version }} installed
#  shell: "ruby -v | grep {{ ruby_version }}"
#  register: ruby_installed
#  changed_when: false
#  ignore_errors: yes # failure means our ruby version isn't installed yet
#  always_run: yes

- name: remove package ruby
  become: yes
  package: name=ruby state=absent
  
- name: set ruby download path
  set_fact: 
    ruby_gzip_url: http://cache.ruby-lang.org/pub/ruby/{{ ruby_major_minor_ver | default('2.3') }}/ruby-{{ ruby_ver | default('2.3.1') }}.tar.gz
  when: ruby_gzip_url is not defined
    
- name: set ruby checksum
  set_fact:
    ruby_sha_256: b87c738cb2032bf4920fef8e3864dc5cf8eae9d89d8d523ce0236945c5797dcd
  when: ruby_sha_256 is not defined
  
- name: setup install directory
  set_fact:
    install_path: /home/{{ ansible_ssh_user }}/install
    
- name: ensure install directory exists
  file:
    path: '{{ install_path }}'
    state: directory

- name: download ruby
  get_url: url={{ ruby_gzip_url }} sha256sum={{ ruby_sha_256 }}  dest={{ install_path }}/ruby-{{ ruby_ver | default('2.3.1') }}.tar.gz 
  
- name: unzip ruby file
  unarchive: src={{ install_path }}/ruby-{{ ruby_ver }}.tar.gz dest={{ install_path }}/ creates={{ install_path }}/ruby-{{ ruby_ver }}/compile.c copy=no

- name: check if ruby is installed
  stat: path=/usr/local/bin/ruby
  register: ruby

- name: configure ruby
  shell: cd {{ install_path }}/ruby-{{ ruby_ver }} && ./configure --enable-shared creates={{ install_path }}/ruby-{{ ruby_ver }}/Makefile
  when: ruby.stat.exists == False
    
- name: make ruby
  shell: cd {{ install_path }}/ruby-{{ ruby_ver }} && make 
  when: ruby.stat.exists == False

- name: install ruby
  become: yes
  shell: cd {{ install_path }}/ruby-{{ ruby_ver }} && make install creates=/usr/local/bin/ruby
  when: ruby.stat.exists == False

- name: update rubygems
  command: gem update --system
 
- name: install bundler
  gem: name=bundler user_install=no state=present